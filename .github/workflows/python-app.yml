name: Python Library Management CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11']
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
    
    - name: Setup project structure
      run: |
        mkdir -p src/{models,controllers,views,utils}
        mkdir -p data tests
        touch data/library.db
        
    - name: Move files to correct locations
      run: |
        cp -r models/* src/models/ || true
        cp -r controllers/* src/controllers/ || true
        cp -r views/* src/views/ || true
        cp main.py src/ || true
        find . -name "test_*.py" -exec cp {} tests/ \;
    
    - name: Set PYTHONPATH
      run: |
        echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Initialize database
      run: |
        python -c "from src.models.db import setup_database; setup_database()"
    
    - name: Run tests with coverage
      run: |
        pytest --verbose --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
